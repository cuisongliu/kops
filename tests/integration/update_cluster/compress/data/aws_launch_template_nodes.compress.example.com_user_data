Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
MIME-Version: 1.0

--MIMEBOUNDARY
Content-Disposition: attachment; filename="nodeup.sh"
Content-Transfer-Encoding: 7bit
Content-Type: text/x-shellscript
Mime-Version: 1.0

#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail

NODEUP_URL_AMD64=https://artifacts.k8s.io/binaries/kops/1.34.0-beta.1/linux/amd64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.34.0-beta.1/nodeup-linux-amd64
NODEUP_HASH_AMD64=c86e072f622b91546b7b3f3cb1a0f8a131e48b966ad018a0ac1520ceedf37725
NODEUP_URL_ARM64=https://artifacts.k8s.io/binaries/kops/1.34.0-beta.1/linux/arm64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.34.0-beta.1/nodeup-linux-arm64
NODEUP_HASH_ARM64=64a9a9510538a449e85d05e13e3cd98b80377d68a673447c26821d40f00f0075

export AWS_REGION=us-test-1




sysctl -w net.core.rmem_max=16777216 || true
sysctl -w net.core.wmem_max=16777216 || true
sysctl -w net.ipv4.tcp_rmem='4096 87380 16777216' || true
sysctl -w net.ipv4.tcp_wmem='4096 87380 16777216' || true


function ensure-install-dir() {
  INSTALL_DIR="/opt/kops"
  # On ContainerOS, we install under /var/lib/toolbox; /opt is ro and noexec
  if [[ -d /var/lib/toolbox ]]; then
    INSTALL_DIR="/var/lib/toolbox/kops"
  fi
  mkdir -p ${INSTALL_DIR}/bin
  mkdir -p ${INSTALL_DIR}/conf
  cd ${INSTALL_DIR}
}

# Retry a download until we get it. args: name, sha, urls
download-or-bust() {
  echo "== Downloading $1 with hash $2 from $3 =="
  local -r file="$1"
  local -r hash="$2"
  local -a urls
  IFS=, read -r -a urls <<< "$3"

  if [[ -f "${file}" ]]; then
    if ! validate-hash "${file}" "${hash}"; then
      rm -f "${file}"
    else
      return 0
    fi
  fi

  while true; do
    for url in "${urls[@]}"; do
      commands=(
        "curl -f --compressed -Lo ${file} --connect-timeout 20 --retry 6 --retry-delay 10"
        "wget --compression=auto -O ${file} --connect-timeout=20 --tries=6 --wait=10"
        "curl -f -Lo ${file} --connect-timeout 20 --retry 6 --retry-delay 10"
        "wget -O ${file} --connect-timeout=20 --tries=6 --wait=10"
      )
      for cmd in "${commands[@]}"; do
        echo "== Downloading ${url} using ${cmd} =="
        if ! (${cmd} "${url}"); then
          echo "== Failed to download ${url} using ${cmd} =="
          continue
        fi
        if ! validate-hash "${file}" "${hash}"; then
          echo "== Failed to validate hash for ${url} =="
          rm -f "${file}"
        else
          echo "== Downloaded ${url} with hash ${hash} =="
          return 0
        fi
      done
    done

    echo "== All downloads failed; sleeping before retrying =="
    sleep 60
  done
}

validate-hash() {
  local -r file="$1"
  local -r expected="$2"
  local actual

  actual=$(sha256sum "${file}" | awk '{ print $1 }') || true
  if [[ "${actual}" != "${expected}" ]]; then
    echo "== File ${file} is corrupted; hash ${actual} doesn't match expected ${expected} =="
    return 1
  fi
}

function download-release() {
  case "$(uname -m)" in
  x86_64*|i?86_64*|amd64*)
    NODEUP_URL="${NODEUP_URL_AMD64}"
    NODEUP_HASH="${NODEUP_HASH_AMD64}"
    ;;
  aarch64*|arm64*)
    NODEUP_URL="${NODEUP_URL_ARM64}"
    NODEUP_HASH="${NODEUP_HASH_ARM64}"
    ;;
  *)
    echo "Unsupported host arch: $(uname -m)" >&2
    exit 1
    ;;
  esac

  cd ${INSTALL_DIR}/bin
  download-or-bust nodeup "${NODEUP_HASH}" "${NODEUP_URL}"

  chmod +x nodeup

  echo "== Running nodeup =="
  # We can't run in the foreground because of https://github.com/docker/docker/issues/23793
  ( cd ${INSTALL_DIR}/bin; ./nodeup --install-systemd-unit --conf=${INSTALL_DIR}/conf/kube_env.yaml --v=8  )
}

####################################################################################

/bin/systemd-machine-id-setup || echo "== Failed to initialize the machine ID; ensure machine-id configured =="

echo "== nodeup node config starting =="
ensure-install-dir

echo "H4sIAAAAAAAA/6yUS4+ySBiF9/4K9qZbBEUw6UVBAaINcuejdwjFTS7FzVIzP37S9CRfJtOZTCbNgsU5qWfx5smRqnZKzL69FQnq91REhoVUTcOIeiOq0Z6K2xr3aBhe0T2qcYVe47ZeSG2TFpmD+hvq9wuKkoCE+rFIizga0bCn/lhQFEW9fH6irGoGJcm2qymaBFx5Tude1zTxUkoSsIsMEE0EmaYrGBidCHnDgTwDPEcHtCo5nepoFxZasigRD+hidldK4M0QMTN8EeguDMZ1WPuPS+3TH7/0MWRkcshjQy9lYjwBq8OYnCEgwWf2/J3NkLkoQajbIVFACH3LgjJZ90lwrOJ6WyWq/3wPjFxXCIFWeDy1H1p+iw1gyaJoAThDHAKIA44iMBSNffa0e+Wv/RDwN1KmOn4ez1Vg8dyau6lsaEZMBzJt52/aE0l9+qFl6xlSjssDl27MFbmawHRNN7WxoD349iDLCqElQGQAIkPSZUBgFkLfpk1gHVYisCDIZPXrsIBXwdpLZCKLK2IpOtBFkPLkYM0PzqIYyoqhsk+/dOP36kjgcNysTgL0d6c298BfkH9eHtAyEPmEZtOQIbvghNMzI3QaI2zxxEibOBJA4atnnDkxP0PG2ho6ro/vI+su+8uWF0x/fNI1WcUn936+ctmBkSRp+TikD4a8vf32Rjbg99b8X6tutRPRZ1CF9a/Tz1rl6sz3Vn0WP2aVrnDKJvpIMKJtDz8e10jEAfmQGnJJ0zxUz2SZDpydvE9et7Mkoz7WK7nbzZAgOD8LPYSFJjiXuMJwyVnFkTZYucPY937QqnetxhywSxOCA9fk2nKIA39kLeHS/KtVvuXft7o3TkBDyJxMod2u7yN2GYdTbmnBHzeadG+qLzUFcedBZhry2FfMMULtu6CmEx+Fm9NRRF2Xbduy2nS13bh5+V+sGuYlGz6n7IXKxxEP+9Xq2uLhJW6bsW+rCvWvRTOivomq1+8mcc8KPL9aaM0wRk2M1L6d8NeANm2Chr8XdluhPWW0CVp8/ib8taeHaMj3FDSipuW2WaZfNuqYf5Sb3Ls9yOjfUrpISit+rI0DO+1wxb8t/gQAAP//AQAA//9UlKIQvgUAAA==" | base64 -d | gzip -d > conf/kube_env.yaml

download-release
echo "== nodeup node config done =="

--MIMEBOUNDARY
Content-Disposition: attachment; filename="myscript.sh"
Content-Transfer-Encoding: 7bit
Content-Type: text/x-shellscript
Mime-Version: 1.0

#!/bin/sh
echo "nodes: The time is now $(date -R)!" | tee /root/output.txt

--MIMEBOUNDARY--
