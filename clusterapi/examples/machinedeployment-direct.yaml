apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME_ESCAPED}-md-0"
spec:
  clusterName: "${CLUSTER_NAME_ESCAPED}"
  replicas: ${WORKER_MACHINE_COUNT}
  template:
    spec:
      clusterName: "${CLUSTER_NAME_ESCAPED}"
      version: "${KUBERNETES_VERSION}"
      failureDomain: "${GCP_ZONE}"
      bootstrap:
        configRef:
          name: "${CLUSTER_NAME_ESCAPED}-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KopsConfigTemplate
      infrastructureRef:
        name: "${CLUSTER_NAME_ESCAPED}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: GCPMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: GCPMachineTemplate
metadata:
  name: "${CLUSTER_NAME_ESCAPED}-md-0"
spec:
  template:
    spec:
      instanceType: "${GCP_NODE_MACHINE_TYPE}"
      image: "${IMAGE_ID}"
      subnet: "${GCP_SUBNET}"
      additionalNetworkTags:
      - clusterapi-k8s-local-k8s-io-role-node
      publicIP: true
      additionalMetadata:
      # - key: kops-k8s-io-instance-group-name
      #   value: nodes-us-east4-a
      - key: cluster-name
        value: "${CLUSTER_NAME}"


---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KopsConfigTemplate
metadata:
  name: "${CLUSTER_NAME_ESCAPED}-md-0"
spec:
  template:
    spec: {}
      #joinConfiguration:
      #  nodeRegistration:
      #    name: '{{ ds.meta_data.local_hostname.split(".")[0] }}'
      #    kubeletExtraArgs:
      #      cloud-provider: gce
